package com.example.administrator.myapplication.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.administrator.myapplication.Model.CheckinInfo;
import com.example.administrator.myapplication.Model.UserInfo;
import com.example.administrator.myapplication.Model.nodeInfo;

import com.example.administrator.myapplication.greendao.CheckinInfoDao;
import com.example.administrator.myapplication.greendao.UserInfoDao;
import com.example.administrator.myapplication.greendao.nodeInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig checkinInfoDaoConfig;
    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig nodeInfoDaoConfig;

    private final CheckinInfoDao checkinInfoDao;
    private final UserInfoDao userInfoDao;
    private final nodeInfoDao nodeInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        checkinInfoDaoConfig = daoConfigMap.get(CheckinInfoDao.class).clone();
        checkinInfoDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        nodeInfoDaoConfig = daoConfigMap.get(nodeInfoDao.class).clone();
        nodeInfoDaoConfig.initIdentityScope(type);

        checkinInfoDao = new CheckinInfoDao(checkinInfoDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        nodeInfoDao = new nodeInfoDao(nodeInfoDaoConfig, this);

        registerDao(CheckinInfo.class, checkinInfoDao);
        registerDao(UserInfo.class, userInfoDao);
        registerDao(nodeInfo.class, nodeInfoDao);
    }
    
    public void clear() {
        checkinInfoDaoConfig.clearIdentityScope();
        userInfoDaoConfig.clearIdentityScope();
        nodeInfoDaoConfig.clearIdentityScope();
    }

    public CheckinInfoDao getCheckinInfoDao() {
        return checkinInfoDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public nodeInfoDao getNodeInfoDao() {
        return nodeInfoDao;
    }

}
